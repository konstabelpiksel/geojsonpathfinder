!function(){return function e(t,r,n){function o(a,s){if(!r[a]){if(!t[a]){var u="function"==typeof require&&require;if(!s&&u)return u(a,!0);if(i)return i(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var d=r[a]={exports:{}};t[a][0].call(d.exports,function(e){return o(t[a][1][e]||e)},d,d.exports,e,t,r,n)}return r[a].exports}for(var i="function"==typeof require&&require,a=0;a<n.length;a++)o(n[a]);return o}}()({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/invariant"),o=e("@turf/helpers");r.default=function(e,t,r){void 0===r&&(r={});var i=n.getCoord(e),a=n.getCoord(t),s=o.degreesToRadians(a[1]-i[1]),u=o.degreesToRadians(a[0]-i[0]),c=o.degreesToRadians(i[1]),d=o.degreesToRadians(a[1]),g=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(u/2),2)*Math.cos(c)*Math.cos(d);return o.radiansToLength(2*Math.atan2(Math.sqrt(g),Math.sqrt(1-g)),r.units)}},{"@turf/helpers":4,"@turf/invariant":5}],2:[function(e,t,r){"use strict";var n=e("@turf/meta"),o=e("@turf/helpers");function i(e){var t=[];return"FeatureCollection"===e.type?n.featureEach(e,function(e){n.coordEach(e,function(r){t.push(o.point(r,e.properties))})}):n.coordEach(e,function(r){t.push(o.point(r,e.properties))}),o.featureCollection(t)}t.exports=i,t.exports.default=i},{"@turf/helpers":3,"@turf/meta":6}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n={meters:6371008.8,metres:6371008.8,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:6371008.8/1852,inches:6371008.8*39.37,yards:6371008.8/1.0936,feet:20902260.511392,radians:1,degrees:6371008.8/111325},o={meters:1,metres:1,millimeters:1e3,millimetres:1e3,centimeters:100,centimetres:100,kilometers:.001,kilometres:.001,miles:1/1609.344,nauticalmiles:1/1852,inches:39.37,yards:1/1.0936,feet:3.28084,radians:1/6371008.8,degrees:1/111325},i={meters:1,metres:1,millimeters:1e6,millimetres:1e6,centimeters:1e4,centimetres:1e4,kilometers:1e-6,kilometres:1e-6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function a(e,t,r){if(!w(r=r||{}))throw new Error("options is invalid");var n=r.bbox,o=r.id;if(void 0===e)throw new Error("geometry is required");if(t&&t.constructor!==Object)throw new Error("properties must be an Object");n&&v(n),o&&b(o);var i={type:"Feature"};return o&&(i.id=o),n&&(i.bbox=n),i.properties=t||{},i.geometry=e,i}function s(e,t,r){if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!h(e[0])||!h(e[1]))throw new Error("coordinates must contain numbers");return a({type:"Point",coordinates:e},t,r)}function u(e,t,r){if(!e)throw new Error("coordinates is required");for(var n=0;n<e.length;n++){var o=e[n];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var i=0;i<o[o.length-1].length;i++){if(0===n&&0===i&&!h(o[0][0])||!h(o[0][1]))throw new Error("coordinates must contain numbers");if(o[o.length-1][i]!==o[0][i])throw new Error("First and last Position are not equivalent.")}}return a({type:"Polygon",coordinates:e},t,r)}function c(e,t,r){if(!e)throw new Error("coordinates is required");if(e.length<2)throw new Error("coordinates must be an array of two or more positions");if(!h(e[0][1])||!h(e[0][1]))throw new Error("coordinates must contain numbers");return a({type:"LineString",coordinates:e},t,r)}function d(e,t){if(!w(t=t||{}))throw new Error("options is invalid");var r=t.bbox,n=t.id;if(!e)throw new Error("No features passed");if(!Array.isArray(e))throw new Error("features must be an Array");r&&v(r),n&&b(n);var o={type:"FeatureCollection"};return n&&(o.id=n),r&&(o.bbox=r),o.features=e,o}function g(e,t,r){if(!e)throw new Error("coordinates is required");return a({type:"MultiLineString",coordinates:e},t,r)}function y(e,t,r){if(!e)throw new Error("coordinates is required");return a({type:"MultiPoint",coordinates:e},t,r)}function p(e,t,r){if(!e)throw new Error("coordinates is required");return a({type:"MultiPolygon",coordinates:e},t,r)}function l(e,t){if(null==e)throw new Error("radians is required");if(t&&"string"!=typeof t)throw new Error("units must be a string");var r=n[t||"kilometers"];if(!r)throw new Error(t+" units is invalid");return e*r}function f(e,t){if(null==e)throw new Error("distance is required");if(t&&"string"!=typeof t)throw new Error("units must be a string");var r=n[t||"kilometers"];if(!r)throw new Error(t+" units is invalid");return e/r}function m(e){if(null==e)throw new Error("radians is required");return 180*(e%(2*Math.PI))/Math.PI}function h(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}function w(e){return!!e&&e.constructor===Object}function v(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!h(e))throw new Error("bbox must only contain numbers")})}function b(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}r.earthRadius=6371008.8,r.factors=n,r.unitsFactors=o,r.areaFactors=i,r.feature=a,r.geometry=function(e,t,r){if(!w(r=r||{}))throw new Error("options is invalid");var n,o=r.bbox;if(!e)throw new Error("type is required");if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");switch(o&&v(o),e){case"Point":n=s(t).geometry;break;case"LineString":n=c(t).geometry;break;case"Polygon":n=u(t).geometry;break;case"MultiPoint":n=y(t).geometry;break;case"MultiLineString":n=g(t).geometry;break;case"MultiPolygon":n=p(t).geometry;break;default:throw new Error(e+" is invalid")}return o&&(n.bbox=o),n},r.point=s,r.points=function(e,t,r){if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");return d(e.map(function(e){return s(e,t)}),r)},r.polygon=u,r.polygons=function(e,t,r){if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");return d(e.map(function(e){return u(e,t)}),r)},r.lineString=c,r.lineStrings=function(e,t,r){if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");return d(e.map(function(e){return c(e,t)}),r)},r.featureCollection=d,r.multiLineString=g,r.multiPoint=y,r.multiPolygon=p,r.geometryCollection=function(e,t,r){if(!e)throw new Error("geometries is required");if(!Array.isArray(e))throw new Error("geometries must be an Array");return a({type:"GeometryCollection",geometries:e},t,r)},r.round=function(e,t){if(null==e||isNaN(e))throw new Error("num is required");if(t&&!(t>=0))throw new Error("precision must be a positive number");var r=Math.pow(10,t||0);return Math.round(e*r)/r},r.radiansToLength=l,r.lengthToRadians=f,r.lengthToDegrees=function(e,t){return m(f(e,t))},r.bearingToAzimuth=function(e){if(null==e)throw new Error("bearing is required");var t=e%360;return t<0&&(t+=360),t},r.radiansToDegrees=m,r.degreesToRadians=function(e){if(null==e)throw new Error("degrees is required");return e%360*Math.PI/180},r.convertLength=function(e,t,r){if(null==e)throw new Error("length is required");if(!(e>=0))throw new Error("length must be a positive number");return l(f(e,t),r||"kilometers")},r.convertArea=function(e,t,r){if(null==e)throw new Error("area is required");if(!(e>=0))throw new Error("area must be a positive number");var n=i[t||"meters"];if(!n)throw new Error("invalid original units");var o=i[r||"kilometers"];if(!o)throw new Error("invalid final units");return e/n*o},r.isNumber=h,r.isObject=w,r.validateBBox=v,r.validateId=b,r.radians2degrees=function(){throw new Error("method has been renamed to `radiansToDegrees`")},r.degrees2radians=function(){throw new Error("method has been renamed to `degreesToRadians`")},r.distanceToDegrees=function(){throw new Error("method has been renamed to `lengthToDegrees`")},r.distanceToRadians=function(){throw new Error("method has been renamed to `lengthToRadians`")},r.radiansToDistance=function(){throw new Error("method has been renamed to `radiansToLength`")},r.bearingToAngle=function(){throw new Error("method has been renamed to `bearingToAzimuth`")},r.convertDistance=function(){throw new Error("method has been renamed to `convertLength`")}},{}],4:[function(e,t,r){"use strict";function n(e,t,r){void 0===r&&(r={});var n={type:"Feature"};return(0===r.id||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function o(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!l(e[0])||!l(e[1]))throw new Error("coordinates must contain numbers");return n({type:"Point",coordinates:e},t,r)}function i(e,t,r){void 0===r&&(r={});for(var o=0,i=e;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++)if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}return n({type:"Polygon",coordinates:e},t,r)}function a(e,t,r){if(void 0===r&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return n({type:"LineString",coordinates:e},t,r)}function s(e,t){void 0===t&&(t={});var r={type:"FeatureCollection"};return t.id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function u(e,t,r){return void 0===r&&(r={}),n({type:"MultiLineString",coordinates:e},t,r)}function c(e,t,r){return void 0===r&&(r={}),n({type:"MultiPoint",coordinates:e},t,r)}function d(e,t,r){return void 0===r&&(r={}),n({type:"MultiPolygon",coordinates:e},t,r)}function g(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function y(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function p(e){return 180*(e%(2*Math.PI))/Math.PI}function l(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:r.earthRadius/1.0936},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1/1.0936},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:3.86e-7,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=n,r.geometry=function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return o(t).geometry;case"LineString":return a(t).geometry;case"Polygon":return i(t).geometry;case"MultiPoint":return c(t).geometry;case"MultiLineString":return u(t).geometry;case"MultiPolygon":return d(t).geometry;default:throw new Error(e+" is invalid")}},r.point=o,r.points=function(e,t,r){return void 0===r&&(r={}),s(e.map(function(e){return o(e,t)}),r)},r.polygon=i,r.polygons=function(e,t,r){return void 0===r&&(r={}),s(e.map(function(e){return i(e,t)}),r)},r.lineString=a,r.lineStrings=function(e,t,r){return void 0===r&&(r={}),s(e.map(function(e){return a(e,t)}),r)},r.featureCollection=s,r.multiLineString=u,r.multiPoint=c,r.multiPolygon=d,r.geometryCollection=function(e,t,r){return void 0===r&&(r={}),n({type:"GeometryCollection",geometries:e},t,r)},r.round=function(e,t){if(void 0===t&&(t=0),t&&!(t>=0))throw new Error("precision must be a positive number");var r=Math.pow(10,t||0);return Math.round(e*r)/r},r.radiansToLength=g,r.lengthToRadians=y,r.lengthToDegrees=function(e,t){return p(y(e,t))},r.bearingToAzimuth=function(e){var t=e%360;return t<0&&(t+=360),t},r.radiansToDegrees=p,r.degreesToRadians=function(e){return e%360*Math.PI/180},r.convertLength=function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),!(e>=0))throw new Error("length must be a positive number");return g(y(e,t),r)},r.convertArea=function(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=r.areaFactors[t];if(!o)throw new Error("invalid original units");var i=r.areaFactors[n];if(!i)throw new Error("invalid final units");return e/o*i},r.isNumber=l,r.isObject=function(e){return!!e&&e.constructor===Object},r.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!l(e))throw new Error("bbox must only contain numbers")})},r.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},{}],5:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers");r.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},r.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},r.containsNumber=function e(t){if(t.length>1&&n.isNumber(t[0])&&n.isNumber(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")},r.geojsonType=function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)},r.featureOf=function(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)},r.collectionOf=function(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var n=0,o=e.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!i.geometry||i.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+i.geometry.type)}},r.getGeom=function(e){return"Feature"===e.type?e.geometry:e},r.getType=function(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}},{"@turf/helpers":4}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers");function o(e,t,r){if(null!==e)for(var n,i,a,s,u,c,d,g,y=0,p=0,l=e.type,f="FeatureCollection"===l,m="Feature"===l,h=f?e.features.length:1,w=0;w<h;w++){u=(g=!!(d=f?e.features[w].geometry:m?e.geometry:e)&&"GeometryCollection"===d.type)?d.geometries.length:1;for(var v=0;v<u;v++){var b=0,L=0;if(null!==(s=g?d.geometries[v]:d)){c=s.coordinates;var S=s.type;switch(y=!r||"Polygon"!==S&&"MultiPolygon"!==S?0:1,S){case null:break;case"Point":if(!1===t(c,p,w,b,L))return!1;p++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<c.length;n++){if(!1===t(c[n],p,w,b,L))return!1;p++,"MultiPoint"===S&&b++}"LineString"===S&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<c.length;n++){for(i=0;i<c[n].length-y;i++){if(!1===t(c[n][i],p,w,b,L))return!1;p++}"MultiLineString"===S&&b++,"Polygon"===S&&L++}"Polygon"===S&&b++;break;case"MultiPolygon":for(n=0;n<c.length;n++){for("MultiPolygon"===S&&(L=0),i=0;i<c[n].length;i++){for(a=0;a<c[n][i].length-y;a++){if(!1===t(c[n][i][a],p,w,b,L))return!1;p++}L++}b++}break;case"GeometryCollection":for(n=0;n<s.geometries.length;n++)if(!1===o(s.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function s(e,t){var r,n,o,i,a,s,u,c,d,g,y=0,p="FeatureCollection"===e.type,l="Feature"===e.type,f=p?e.features.length:1;for(r=0;r<f;r++){for(s=p?e.features[r].geometry:l?e.geometry:e,c=p?e.features[r].properties:l?e.properties:{},d=p?e.features[r].bbox:l?e.bbox:void 0,g=p?e.features[r].id:l?e.id:void 0,a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,y,c,d,g))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],y,c,d,g))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,y,c,d,g))return!1;y++}}function u(e,t){s(e,function(e,r,o,i,a){var s,u=null===e?null:e.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1!==t(n.feature(e,o,{bbox:i,id:a}),r,0)&&void 0}switch(u){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon"}for(var c=0;c<e.coordinates.length;c++){var d={type:s,coordinates:e.coordinates[c]};if(!1===t(n.feature(d,o),r,c))return!1}})}function c(e,t){u(e,function(e,r,i){var a=0;if(e.geometry){var s,u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u)return!1!==o(e,function(o,u,c,d,g){if(void 0!==s){var y=n.lineString([s,o],e.properties);if(!1===t(y,r,i,g,a))return!1;a++,s=o}else s=o})&&void 0}})}function d(e,t){if(!e)throw new Error("geojson is required");u(e,function(e,r,o){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===t(e,r,o,0,0))return!1;break;case"Polygon":for(var s=0;s<a.length;s++)if(!1===t(n.lineString(a[s],e.properties),r,o,s))return!1}}})}r.coordEach=o,r.coordReduce=function(e,t,r,n){var i=r;return o(e,function(e,n,o,a,s){i=0===n&&void 0===r?e:t(i,e,n,o,a,s)},n),i},r.propEach=i,r.propReduce=function(e,t,r){var n=r;return i(e,function(e,o){n=0===o&&void 0===r?e:t(n,e,o)}),n},r.featureEach=a,r.featureReduce=function(e,t,r){var n=r;return a(e,function(e,o){n=0===o&&void 0===r?e:t(n,e,o)}),n},r.coordAll=function(e){var t=[];return o(e,function(e){t.push(e)}),t},r.geomEach=s,r.geomReduce=function(e,t,r){var n=r;return s(e,function(e,o,i,a,s){n=0===o&&void 0===r?e:t(n,e,o,i,a,s)}),n},r.flattenEach=u,r.flattenReduce=function(e,t,r){var n=r;return u(e,function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)}),n},r.segmentEach=c,r.segmentReduce=function(e,t,r){var n=r,o=!1;return c(e,function(e,i,a,s,u){n=!1===o&&void 0===r?e:t(n,e,i,a,s,u),o=!0}),n},r.lineEach=d,r.lineReduce=function(e,t,r){var n=r;return d(e,function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)}),n},r.findSegment=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,s=t.segmentIndex||0,u=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),u=u||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":u=u||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var c=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return s<0&&(s=c.length+s-1),n.lineString([c[s],c[s+1]],u,t);case"Polygon":return a<0&&(a=c.length+a),s<0&&(s=c[a].length+s-1),n.lineString([c[a][s],c[a][s+1]],u,t);case"MultiLineString":return i<0&&(i=c.length+i),s<0&&(s=c[i].length+s-1),n.lineString([c[i][s],c[i][s+1]],u,t);case"MultiPolygon":return i<0&&(i=c.length+i),a<0&&(a=c[i].length+a),s<0&&(s=c[i][a].length-s-1),n.lineString([c[i][a][s],c[i][a][s+1]],u,t)}throw new Error("geojson is invalid")},r.findPoint=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,s=t.coordIndex||0,u=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),u=u||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":u=u||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var c=r.coordinates;switch(r.type){case"Point":return n.point(c,u,t);case"MultiPoint":return i<0&&(i=c.length+i),n.point(c[i],u,t);case"LineString":return s<0&&(s=c.length+s),n.point(c[s],u,t);case"Polygon":return a<0&&(a=c.length+a),s<0&&(s=c[a].length+s),n.point(c[a][s],u,t);case"MultiLineString":return i<0&&(i=c.length+i),s<0&&(s=c[i].length+s),n.point(c[i][s],u,t);case"MultiPolygon":return i<0&&(i=c.length+i),a<0&&(a=c[i].length+a),s<0&&(s=c[i][a].length-s),n.point(c[i][a][s],u,t)}throw new Error("geojson is invalid")}},{"@turf/helpers":7}],7:[function(e,t,r){arguments[4][3][0].apply(r,arguments)},{dup:3}],8:[function(e,t,r){"use strict";function n(e,t,r,n,o,i,a){a=a||{};var s=t[e];return Object.keys(s).reduce(function(s,u){var c=function(e,t,r,n,o,i,a,s){var u=r[e][t],c=r[t][e],d=[],g=[],y=s.edgeDataSeed;for(s.edgeDataReduceFn&&(y=s.edgeDataReduceFn(y,i[t][e]));!n[t];){var p=r[t];if(!p)break;var l=Object.keys(p).filter(function(t){return t!==e})[0];if(u+=p[l],a){if(c+=r[l][t],g.indexOf(t)>=0){n[t]=r[t];break}g.push(t)}s.edgeDataReduceFn&&(y=s.edgeDataReduceFn(y,i[t][l])),d.push(o[t]),e=t,t=l}return{vertex:t,weight:u,reverseWeight:c,coordinates:d,reducedEdge:y}}(e,u,t,r,n,o,i,a),d=c.weight,g=c.reverseWeight;if(c.vertex!==e&&((!s.edges[c.vertex]||s.edges[c.vertex]>d)&&(s.edges[c.vertex]=d,s.coordinates[c.vertex]=[n[e]].concat(c.coordinates),s.reducedEdges[c.vertex]=c.reducedEdge),i&&!isNaN(g)&&(!s.incomingEdges[c.vertex]||s.incomingEdges[c.vertex]>g))){s.incomingEdges[c.vertex]=g;var y=[n[e]].concat(c.coordinates);y.reverse(),s.incomingCoordinates[c.vertex]=y}return s},{edges:{},incomingEdges:{},coordinates:{},incomingCoordinates:{},reducedEdges:{}})}t.exports={compactNode:n,compactGraph:function(e,t,r,o){var i=(o=o||{}).progress,a=Object.keys(e).reduce(function(t,r,n,o){var a,s=e[r],u=Object.keys(s),c=u.length;if(1===c){var d=e[u[0]];a=!d[r]}else a=2===c&&u.filter(function(t){return e[t][r]}).length===c;return a||(t[r]=s),n%1e3==0&&i&&i("compact:ends",n,o.length),t},{});return Object.keys(a).reduce(function(s,u,c,d){var g=n(u,e,a,t,r,!1,o);return s.graph[u]=g.edges,s.coordinates[u]=g.coordinates,o.edgeDataReduceFn&&(s.reducedEdges[u]=g.reducedEdges),c%1e3==0&&i&&i("compact:nodes",c,d.length),s},{graph:{},coordinates:{},reducedEdges:{}})}}},{}],9:[function(e,t,r){var n=e("tinyqueue");t.exports=function(e,t,r){var o={};o[t]=0;for(var i=new n([[0,[t],t]],function(e,t){return e[0]-t[0]});i.length;){var a=i.pop(),s=a[0],u=a[2];if(u===r)return a.slice(0,2);var c=e[u];Object.keys(c).forEach(function(e){var t=s+c[e];if(!(e in o)||t<o[e]){o[e]=t;var r=[t,a[1].concat([e]),e];i.push(r)}})}return null}},{tinyqueue:14}],10:[function(e,t,r){"use strict";var n=e("./dijkstra"),o=e("./preprocessor"),i=e("./compactor"),a=e("./round-coord");function s(e,t){if(t=t||{},e.compactedVertices||(e=o(e,t)),this._graph=e,this._keyFn=t.keyFn||function(e){return e.join(",")},this._precision=t.precision||1e-5,this._options=t,0===Object.keys(this._graph.compactedVertices).filter(function(e){return"edgeData"!==e}).length)throw new Error("Compacted graph contains no forks (topology has no intersections).")}t.exports=s,s.prototype={findPath:function(e,t){var r=this._keyFn(a(e.geometry.coordinates,this._precision)),o=this._keyFn(a(t.geometry.coordinates,this._precision));if(!this._graph.vertices[r]||!this._graph.vertices[o])return null;this._createPhantom(r),this._createPhantom(o);var i=n(this._graph.compactedVertices,r,o);if(i){var s=i[0];return{path:(i=i[1]).reduce(function(e,t,r,n){return r>0&&(e=e.concat(this._graph.compactedCoordinates[n[r-1]][t])),e}.bind(this),[]).concat([this._graph.sourceVertices[o]]),weight:s,edgeDatas:this._graph.compactedEdges?i.reduce(function(e,t,r,n){return r>0&&e.push({reducedEdge:this._graph.compactedEdges[n[r-1]][t]}),e}.bind(this),[]):void 0}}return null},serialize:function(){return this._graph},_createPhantom:function(e){if(this._graph.compactedVertices[e])return null;var t=i.compactNode(e,this._graph.vertices,this._graph.compactedVertices,this._graph.sourceVertices,this._graph.edgeData,!0,this._options);return this._graph.compactedVertices[e]=t.edges,this._graph.compactedCoordinates[e]=t.coordinates,this._graph.compactedEdges&&(this._graph.compactedEdges[e]=t.reducedEdges),Object.keys(t.incomingEdges).forEach(function(r){this._graph.compactedVertices[r][e]=t.incomingEdges[r],this._graph.compactedCoordinates[r][e]=t.incomingCoordinates[r],this._graph.compactedEdges&&(this._graph.compactedEdges[r][e]=t.reducedEdges[r])}.bind(this)),e},_removePhantom:function(e){e&&(Object.keys(this._graph.compactedVertices[e]).forEach(function(t){delete this._graph.compactedVertices[t][e]}.bind(this)),Object.keys(this._graph.compactedCoordinates[e]).forEach(function(t){delete this._graph.compactedCoordinates[t][e]}.bind(this)),this._graph.compactedEdges&&Object.keys(this._graph.compactedEdges[e]).forEach(function(t){delete this._graph.compactedEdges[t][e]}.bind(this)),delete this._graph.compactedVertices[e],delete this._graph.compactedCoordinates[e],this._graph.compactedEdges&&delete this._graph.compactedEdges[e])}}},{"./compactor":8,"./dijkstra":9,"./preprocessor":11,"./round-coord":12}],11:[function(e,t,r){"use strict";var n=e("./topology"),o=e("./compactor"),i=e("@turf/distance").default,a=(e("./round-coord"),e("turf-point"));t.exports=function(e,t){var r,s=(t=t||{}).weightFn||function(e,t){return i(a(e),a(t))};"FeatureCollection"===e.type?r=n(e,t):e.edges&&(r=e);e=r.edges.reduce(function(e,n,o,i){var a=n[0],u=n[1],c=n[2],d=s(r.vertices[a],r.vertices[u],c),g=function(r){e.vertices[r]||(e.vertices[r]={},t.edgeDataReduceFn&&(e.edgeData[r]={}))},y=function(r,n,o){e.vertices[r][n]=o,t.edgeDataReduceFn&&(e.edgeData[r][n]=t.edgeDataReduceFn(t.edgeDataSeed,c))};return d&&(g(a),g(u),d instanceof Object?(d.forward&&y(a,u,d.forward),d.backward&&y(u,a,d.backward)):(y(a,u,d),y(u,a,d))),o%1e3==0&&t.progress&&t.progress("edgeweights",o,i.length),e},{edgeData:{},vertices:{}});var u=o.compactGraph(e.vertices,r.vertices,e.edgeData,t);return{vertices:e.vertices,edgeData:e.edgeData,sourceVertices:r.vertices,compactedVertices:u.graph,compactedCoordinates:u.coordinates,compactedEdges:t.edgeDataReduceFn?u.reducedEdges:null}}},{"./compactor":8,"./round-coord":12,"./topology":13,"@turf/distance":1,"turf-point":15}],12:[function(e,t,r){t.exports=function(e,t){return[Math.round(e[0]/t)*t,Math.round(e[1]/t)*t]}},{}],13:[function(e,t,r){"use strict";var n=e("@turf/explode"),o=e("./round-coord");function i(e){return"LineString"===e.geometry.type}t.exports=function(e,t){var r=(t=t||{}).keyFn||function(e){return e.join(",")},a=t.precision||1e-5,s=function(e,t){var r=[];"FeatureCollection"===e.type&&(r=r.concat(e.features.filter(t)));return{type:"FeatureCollection",features:r}}(e,i),u=n(s).features.reduce(function(e,n,i,s){var u=o(n.geometry.coordinates,a);return e[r(u)]=n.geometry.coordinates,i%1e3==0&&t.progress&&t.progress("topo:vertices",i,s.length),e},{}),c=function e(t,r,n){return"FeatureCollection"===t.type?t.features.reduce(function(t,n){return e(n,r,t)},n):r(n,t)}(s,function(e,n,i,s){return n.geometry.coordinates.forEach(function(t,i,s){if(i>0){var u=r(o(s[i-1],a)),c=r(o(t,a));e.push([u,c,n.properties])}}),i%1e3==0&&t.progress&&t.progress("topo:edges",i,s.length),e},[]);return{vertices:u,edges:c}}},{"./round-coord":12,"@turf/explode":2}],14:[function(e,t,r){var n,o;n=this,o=function(){"use strict";var e=function(e,r){if(void 0===e&&(e=[]),void 0===r&&(r=t),this.data=e,this.length=this.data.length,this.compare=r,this.length>0)for(var n=(this.length>>1)-1;n>=0;n--)this._down(n)};function t(e,t){return e<t?-1:e>t?1:0}return e.prototype.push=function(e){this.data.push(e),this.length++,this._up(this.length-1)},e.prototype.pop=function(){if(0!==this.length){var e=this.data[0],t=this.data.pop();return this.length--,this.length>0&&(this.data[0]=t,this._down(0)),e}},e.prototype.peek=function(){return this.data[0]},e.prototype._up=function(e){for(var t=this.data,r=this.compare,n=t[e];e>0;){var o=e-1>>1,i=t[o];if(r(n,i)>=0)break;t[e]=i,e=o}t[e]=n},e.prototype._down=function(e){for(var t=this.data,r=this.compare,n=this.length>>1,o=t[e];e<n;){var i=1+(e<<1),a=t[i],s=i+1;if(s<this.length&&r(t[s],a)<0&&(i=s,a=t[s]),r(a,o)>=0)break;t[e]=a,e=i}t[e]=o},e},"object"==typeof r&&void 0!==t?t.exports=o():"function"==typeof define&&define.amd?define(o):(n=n||self).TinyQueue=o()},{}],15:[function(e,t,r){var n=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)};t.exports=function(e,t){if(!n(e))throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");return{type:"Feature",geometry:{type:"Point",coordinates:e},properties:t||{}}}},{}],16:[function(e,t,r){var n=L.map("map").setView([2.0383062633903277,102.56200790405273],15);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>'}).addTo(n);var o=(new L.FeatureGroup).addTo(n),i=(new L.FeatureGroup).addTo(n),a=L.Icon.extend({options:{iconSize:[60,60],iconAnchor:[19,59]}}),s=new a({iconUrl:"./res/mula.png"}),u=new a({iconUrl:"./res/tamat.png"}),c=L.marker([2.0383062633903277,102.56200790405273],{icon:s,draggable:!0}).bindPopup("Mula").addTo(n),d=L.marker([2.038150838912314,102.56214735258894],{icon:u,draggable:!0}).bindPopup("Tamat").addTo(n),g=document.querySelector("body"),y=document.querySelector("#map"),p="";function l(){n.removeLayer(o),o.addTo(n)}function f(e,t){var r="ID: "+e.id;e.properties&&e.properties.popupContent&&(r+=e.properties.popupContent),t.bindPopup(r)}function m(e){document.querySelector("#click_long").innerHTML=e.latlng.lng,document.querySelector("#click_lat").innerHTML=e.latlng.lat}function h(){console.log(c.latlng),g.classList.remove("customMula"),y.classList.remove("customMula"),g.classList.remove("customTamat"),y.classList.remove("customTamat")}function w(t,r,n){return new(e("geojson-path-finder"))(n,{precision:.001}).findPath(t,r)}n.on("click",m),c.addEventListener("mouseup",function(e){m(e)}),d.addEventListener("mouseup",function(e){m(e)}),document.querySelector("#path1").addEventListener("click",function(e){p="mypath",i.clearLayers(),o.clearLayers();var t=document.querySelector("#custompath").value;""!=t?!function(e){try{JSON.parse(e)}catch(e){return!1}return!0}(t)?document.querySelector("#custompathalert").innerHTML="Data GeoJSON tidak sah!":(document.querySelector("#custompathalert").innerHTML="Data GeoJSON OK!",v=JSON.parse(t),L.geoJSON(v,{style:{color:"#9f00c7",weight:3,opacity:.65},onEachFeature:f}).addTo(o),l()):document.querySelector("#custompathalert").innerHTML="Tiada data GeoJSON dimasukkan!"}),document.querySelector("#path2").addEventListener("click",function(e){p="muarsimple",i.clearLayers(),o.clearLayers(),L.geoJSON(b,{style:{color:"#4b8500",weight:3,opacity:.65},onEachFeature:f}).addTo(o),l()}),document.querySelector("#path3").addEventListener("click",function(e){p="muartown",i.clearLayers(),o.clearLayers(),L.geoJSON(S,{style:{color:"#004ead",weight:3,opacity:.65},onEachFeature:f}).addTo(o),l()}),document.querySelector("#ciptaroute").addEventListener("click",function(e){if(""==p)document.querySelector("#hasilpath").innerHTML="Tiada path dipilih";else{i.clearLayers();var t='{"type": "Feature","geometry": {"type": "Point","coordinates": ['+c._latlng.lng+","+c._latlng.lat+"]}}",r='{"type": "Feature","geometry": {"type": "Point","coordinates": ['+d._latlng.lng+","+d._latlng.lat+"]}}",o=JSON.parse(t),a=JSON.parse(r);if("mypath"==p&&(v?koord=w(o,a,v):document.querySelector("#custompathalert").innerHTML="Sila semak data GeoJSON yang dimasukkan."),"muarsimple"==p&&(koord=w(o,a,b)),"muartown"==p&&(koord=w(o,a,S)),null!=koord){document.querySelector("#hasilpath").innerHTML="Path ditemui, memaparkan shortest path.";var s="";koord.path.forEach(e=>{s+="["+e[0]+","+e[1]+"],"});var u='{"type": "FeatureCollection", "features": [{"type": "Feature", "geometry": {"type": "LineString", "coordinates": ['+s.slice(0,-1)+"]}}]}",g=JSON.parse(u);L.geoJSON(g,{style:{color:"#fd0000",weight:5,opacity:.8},onEachFeature:f}).addTo(i),i.addTo(n)}else document.querySelector("#hasilpath").innerHTML="Tiada path ditemui. Cuba betulkan kedudukan marker Mula dan Tamat pada lokasi yang lebih sesuai/tepat."}}),document.querySelector("#setmulamarker").addEventListener("click",function(e){n.off("click",m),g.classList.add("customMula"),y.classList.add("customMula"),n.on("click",function(e){c.setLatLng(e.latlng),m(e),n.off("click",this.function),n.on("click",m),h()})}),document.querySelector("#settamatmarker").addEventListener("click",function(e){n.off("click",m),g.classList.add("customTamat"),y.classList.add("customTamat"),n.on("click",function(e){d.setLatLng(e.latlng),m(e),n.off("click",this.function),n.on("click",m),h()})});var v="",b={type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56074726581573,2.0441765737451303],[102.56233513355255,2.044251627802592]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56233513355255,2.0442569888065605],[102.56278038024902,2.041694426868573]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56278574466705,2.041699787881078],[102.56069362163542,2.0413781270991165]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56072580814362,2.044181934749353],[102.5593900680542,2.044128324706326]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55937397480011,2.044128324706326],[102.55906283855437,2.0412172966840014]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55906820297241,2.0412280187121787],[102.56067752838135,2.0413781270991165]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56073653697966,2.0441765737451303],[102.56069898605347,2.0413781270991165]]}}]},S={type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56172895431519,2.0375986080923676],[102.56069898605347,2.0385635925124577]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56066143512726,2.0385796755812304],[102.56070971488953,2.0413513220310584]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56069898605347,2.0413781270991165],[102.56276965141295,2.041683704843513]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56276965141295,2.0416515387678866],[102.5632256269455,2.039260525344978]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5628125667572,2.04170514889357],[102.56452918052673,2.0421876399441885]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56457209587097,2.04219836196589],[102.56661057472229,2.043270563774682]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56489396095276,2.0411476034991125],[102.5645613670349,2.0421554738786507]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56323099136353,2.039206915137821],[102.56178259849547,2.0376093301446536]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56450772285461,2.0422305280305624],[102.56379961967468,2.0444928729635117]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56384253501892,2.0445035949698194],[102.56501197814941,2.0449753631765755]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56461501121521,2.0457687912114575],[102.5635313987732,2.0453399112413377]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5635313987732,2.0453077452389534],[102.5637674331665,2.0445250389822314]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56436824798584,2.046337056995254],[102.56463646888733,2.0457687912114575]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56345629692078,2.0452970232380143],[102.56215810775757,2.0451361932153542]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56216883659363,2.045071861201769],[102.56234049797058,2.044267710814433]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56235122680664,2.0442355447905736],[102.56375670433043,2.0444928729635117]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56231904029846,2.04420337876604],[102.5627589225769,2.0417158709184777]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56227612495422,2.0442248227824593],[102.56076335906982,2.04420337876604]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56075263023376,2.044117602697512],[102.56070971488953,2.0413942101397473]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56075263023376,2.0442355447905736],[102.56076335906982,2.0450396951940157]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56077408790587,2.045061139199265],[102.56212592124938,2.0451361932153542]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56073117256165,2.0450396951940157],[102.55948662757872,2.0449968071826645]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5594651699066,2.0449860851796644],[102.55937933921814,2.0441604907323483]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55937933921814,2.044139046715076],[102.56072044372559,2.0441926567577346]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55936861038208,2.044117602697512],[102.55903601646423,2.0412333797262354]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55906820297241,2.0412333797262354],[102.56064534187317,2.0413620440583324]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55904138088226,2.0412333797262354],[102.55895018577576,2.0400861223098428]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55899310112,2.04001106805782],[102.56061315536498,2.038595758649825]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5721788406372,2.0376414963010916],[102.56683588027954,2.043174065641197]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56747961044312,2.032452014759633],[102.56419658660889,2.0354220300000376]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56411075592041,2.035464918266711],[102.56179332733154,2.037523553724344]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56681442260742,2.038048934227054],[102.56814479827881,2.0396250747063758]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56812334060669,2.039667962861119],[102.56581664085388,2.0404399494507928]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56532311439514,2.041469264327205],[102.56574153900146,2.0404613935174396]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56818771362303,2.0395929085895803],[102.56909966468811,2.038595758649825]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.57216811180115,2.0375986080923676],[102.57130980491637,2.0366765113284755]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.57128834724426,2.0366014569174884],[102.56945371627808,2.034414155405043]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56943225860596,2.0344516826618837],[102.56728649139404,2.0363173223299347]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56734013557434,2.0363709326333095],[102.56913721561432,2.038617202741064]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56754398345946,2.0324627368461416],[102.5694751739502,2.034387350221048]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56425023078918,2.035454196200151],[102.56561279296875,2.0366872333869064]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56407052278519,2.0401424129965666],[102.56325244903563,2.0392337202416284]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5640919804573,2.0401531350319195],[102.56453722715378,2.0406999587395873]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5645586848259,2.040678514676121],[102.5649020075798,2.0411127569055485]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56409466266632,2.0401129273990066],[102.56532311439514,2.0369499237960738]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56453454494476,2.0406436680723794],[102.56582736968994,2.0375610809087945]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56583541631699,2.037550358856178],[102.56612241268158,2.0372796270041094]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56614118814468,2.037301071112854],[102.56675004959106,2.038073058837846]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56673127412796,2.0380837808869767],[102.5664871931076,2.038386678745412]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56577372550964,2.040445310467483],[102.56647109985352,2.0384188448863156]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56533652544022,2.036939201739386],[102.56563693284988,2.0366925944160896]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56611570715904,2.0372689049496224],[102.56563425064087,2.0366818723576974]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56671249866486,2.0432759247819323],[102.56754398345946,2.0440747146615306]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56641745567322,2.0456964177245522],[102.56508439779282,2.0449914461811645]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56465256214142,2.0457634302125403],[102.56590783596039,2.0464067499548833]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5659132003784,2.046393347462876],[102.56640672683716,2.0457151812214693]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56758153438568,2.044101519684157],[102.56843984127045,2.045125471213258]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56843984127045,2.0451388737158624],[102.56786853075027,2.0458465256937686]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56785780191422,2.0458411646951182],[102.56688952445984,2.045082583204209]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56688416004181,2.0450691807011463],[102.56756007671356,2.0440907976751523]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56687745451926,2.045075881952703],[102.56642818450928,2.0456937372249726]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56686940789223,2.0450665002005235],[102.56559267640114,2.044451325188376]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56558194756508,2.0444446239342233],[102.56505489349365,2.0449820644285013]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5646324455738,2.045756728963871],[102.56504416465759,2.044984744929264]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56666958332062,2.0432973688107308],[102.5656047463417,2.0444339019275213]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56845593452454,2.0451469152173622],[102.56924450397491,2.0460100361442803]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56918013095856,2.0386118417182795],[102.57128834724426,2.0366872333869064]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55748569965363,2.041512152432764],[102.55902260541914,2.0412306992192137]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55749106407164,2.0415335964850985],[102.55797386169434,2.0440639926523603]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55799531936644,2.0440693536569516],[102.55936861038208,2.0441336857107264]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55945980548859,2.0449994876834143],[102.55814284086227,2.044916392158307]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55813747644423,2.04491103115654],[102.55797922611237,2.04407739516382]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56075665354727,2.045051757446996],[102.56076067686081,2.0457634302125403]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56077140569687,2.0457714717109097],[102.56206154823303,2.0458358036964426]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56206691265106,2.0458304426977545],[102.56217151880264,2.0451576372192934]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5675117969513,2.0324198484996745],[102.56854176521301,2.0315728034234257]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5589394569397,2.0400485951842704],[102.55743205547331,2.0414531812873373]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5574105978012,2.041479986353703],[102.55574762821198,2.042916737256905]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55577981472014,2.042927459273734],[102.55794167518616,2.044058631647743]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55572617053986,2.042948903307201],[102.55500733852386,2.0435975851839325]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.57226467132568,2.0376200521968757],[102.57432460784912,2.035454196200151]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56739377975464,2.032366238064981],[102.56621360778807,2.031336917373739]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56166458129883,2.0375128316714854],[102.55956172943115,2.0351968665813325]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56413221359253,2.0353898637992884],[102.56157875061035,2.0328594539970015]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55947053432465,2.0450128901870626],[102.55955100059509,2.045811679202173]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55956709384917,2.045827762198391],[102.5607419013977,2.04575806921361]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55816161632538,2.0449592801717955],[102.55830645561218,2.0458224011996644]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5583279132843,2.045827762198391],[102.55952954292297,2.045827762198391]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5582903623581,2.045833123197092],[102.55790948867798,2.0459885921517147]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55808115005493,2.04490567015476],[102.5567615032196,2.044777006106534]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55672931671143,2.044760923099782],[102.55554378032684,2.044155129728062]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.5555008649826,2.044139046715076],[102.55500197410583,2.0436190292084433]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.55496978759766,2.0435600581403417],[102.55404710769652,2.0424664124851755]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56529092788696,2.0415228744589697],[102.56491675972939,2.041104715383846]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[102.56530702114104,2.0415362769916245],[102.56676614284515,2.043184787656321]]}}]}},{"geojson-path-finder":10}]},{},[16]);